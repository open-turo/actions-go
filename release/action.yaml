name: "GitHub Action Release & Publish"
description: "Publish a new release of the repository - adds a new major tag"
inputs:
  checkout-repo:
    required: false
    description: "Perform checkout as first step of action"
    default: "true"
  github-token:
    required: true
    description: "GitHub token that can checkout the repository. e.g. 'secrets.GITHUB_TOKEN'"
  docker-hub-username:
    required: true
    description: "Username credential for docker hub read/write access"
  docker-hub-password:
    required: true
    description: "Password credential for docker hub read/write access"
  repository-dispatch-reviewers:
    required: true
    description: "List of one to many GitHub user ids that are to act as dispatch reviewers"
  dry-run:
    required: false
    description: "Whether to run semantic release in `dry-run` mode. It will override the dryRun attribute in your configuration file"
    default: "false"
  extra-plugins:
    required: false
    description: "Extra plugins for pre-install. You can also specify specifying version range for the extra plugins if you prefer."
outputs:
  new-release-published:
    description: "Whether a new release was published"
    value: ${{ steps.release.outputs.new-release-published }}
  new-release-version:
    description: "Version of the new release"
    value: ${{ steps.release.outputs.new-release-version }}
  new_release_major_version:
    description: "Major version of the new release"
    value: ${{ steps.release.outputs.release-major }}
runs:
  using: composite
  steps:
    - name: Show GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      shell: bash
      run: echo "$GITHUB_CONTEXT"
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.docker-hub-username }}
        password: ${{ inputs.docker-hub-password }}
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Go Release
      uses: open-turo/action-go-release@main
      id: release
      with:
        github-token: ${{ inputs.github-token }}
    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ inputs.github-token }}
        repository: turo/mysql-replica-monitor-deployments
        event-type: update-image-tags
        client-payload: |
          {
            "image-tag": "${{ steps.release.outputs.version }}",
            "reviewers": ${{ inputs.repository-dispatch-reviewers }}
          }
